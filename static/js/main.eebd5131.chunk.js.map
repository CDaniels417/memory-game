{"version":3,"sources":["components/Navbar.js","components/ImageCard.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","class","id","status","title","currentScore","highScore","ImageCard","value","onClick","clickPlayer","src","image","alt","shuffleImage","array","counter","length","index","Math","floor","random","view","App","state","result","click","Icons","gameOver","_this","includes","resetGame","increaseScore","push","setState","points","resetIconArray","scramble","score","_this2","this","components_Navbar","map","icon","components_ImageCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.eebd5131.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = props => (\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light container\">\n            <div class=\"navbar-brand\">Forget Me Not Mario Kart!!!</div>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                    <li class=\"nav-link\">\n                        <div class=\"nav-link\">Status: {props.status}</div>\n                    </li>\n                    <li class=\"nav-link\">\n                        <div class=\"nav-link\" title= \"Store\">Score: {props.currentScore}</div>\n                    </li>\n                    <li class=\"nav-link\">\n                        <div class=\"nav-link\" title= \"Contact\">High Score: {props.highScore}</div>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n)\n\nexport default Navbar;","import React from \"react\";\n\nconst ImageCard = props => (\n    <section id={props.id} class=\"card grid-container\" value={props.id} onClick={() => props.clickPlayer(props.id)}>\n        <article class=\"grid-item\">\n            <img src={props.image} class=\"img\" alt=\"character\" />\n        </article>\n    </section>\n)\n\nexport default ImageCard;","import React, {Component} from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ImageCard from \"./components/ImageCard\";\nimport Icons from \"./icons.json\";\nimport \"./App.css\";\n\nconst shuffleImage = (array) => {\n  let counter = array.length;\n  while (counter > 0) {\n    let index = Math.floor(Math.random() * counter);\n    counter--;\n    let view = array[counter];\n    array[counter] = array[index];\n    array[index] = view;\n  }\n  return array;\n}\n\nclass App extends Component {\n\n  state = {\n    currentScore: 0,\n    highScore: 0,\n    result: \"\",\n    click: [],\n    Icons,\n    gameOver: false\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <Navbar highScore={this.state.highScore} currentScore={this.state.currentScore} status={this.state.result} />\n        <div class=\"main\">\n          {this.state.Icons.map(icon => (\n            <ImageCard id={icon.id} image={icon.image} clickPlayer={this.clickPlayer} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  clickPlayer= (id) => {\n    if(!this.state.click.includes(id)){\n      this.increaseScore();\n      this.state.click.push(id);\n      this.setState({ gameOver: false});\n    } else {\n      this.resetGame();\n    }\n  }\n\n  resetGame = () => {\n    this.setState({\n      points: 0,\n      currentScore: 0,\n      highScore: this.state.highScore,\n      result: \"Last Place Finish! Your racing career is over!!!!!\",\n      click: [],\n      Icons,\n      gameOver: true\n    });\n    this.resetIconArray();\n  }\n\n  resetIconArray= () => {\n    let scramble= shuffleImage(Icons);\n    this.setState({Icons: scramble})\n  }\n\n  increaseScore = () => {\n    let score = this.state.currentScore +1;\n    if(score === this.state.Icons.length) {\n      this.setState({\n        result: \"First Place Finish! Select new racer to start again!\",\n        highScore: score,\n        currentScore: 0,\n        click: [],\n        Icons,\n        gameOver: false\n      });\n    } else if (score > this.state.highScore){\n      this.setState({\n        highScore: score,\n        currentScore: score,\n        result: \"Fastest Lap time!!! New Record!\"\n      });\n    } else { \n      this.setState({\n        currentScore: score,\n        result: \"Got 'emmmmm\"\n      });\n    }\n    this.resetIconArray();\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}